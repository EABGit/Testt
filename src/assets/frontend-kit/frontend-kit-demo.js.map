{"version":3,"sources":["atoms/checkbox/demo.ts","atoms/box/demo.ts","atoms/notification/demo.ts","atoms/progressIndicator/demo.ts","molecules/formField/demo.ts","molecules/dialog/demo.ts","molecules/lightbox/demo.ts","molecules/popover/demo.ts","loadDemo.ts"],"names":[],"mappings":"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","file":"frontend-kit-demo.js","sourceRoot":"../src/frontend-kit","sourcesContent":["export default (): void => {\n    const indeterminateCheckboxes = document.querySelectorAll('.a-checkbox.a-checkbox--indeterminate');\n\n    [...indeterminateCheckboxes].forEach(checkbox => {\n        if (checkbox.querySelector('input')) {\n            checkbox.querySelector('input').indeterminate = true;\n        }\n    })\n}","import WindowWithFrontendKit from '../../WindowWithFrontendKit';\n\nexport default (): void => {\n  const { boschFrontendKit } = (window as unknown) as WindowWithFrontendKit;\n\n  // every button with the right class will show the \"demo\" modal on click\n  const modalShowButtons = document.getElementsByClassName(\n    'frontend-kit-example_modal-box',\n  );\n  [...modalShowButtons].forEach(container => {\n    const showTrigger = container.querySelector(\n      '.a-button[data-frok-action=\"show\"]',\n    );\n\n    const modalId = container.getAttribute('data-frok-show-modal');\n\n    const modalElement = boschFrontendKit.Box.findModal(modalId);\n\n    const modal = modalElement.component;\n\n    // close the modal when the background is clicked\n    modal.addEventListener('backgroundClicked', () => modal.hide());\n\n    modalElement.addEventListener('click', () =>\n      boschFrontendKit.Box.hideModal(modalId),\n    );\n\n    if (showTrigger) {\n      showTrigger.addEventListener('click', () =>\n        boschFrontendKit.Box.showModal(modalId),\n      );\n    }\n  });\n};\n","import WindowWithFrontendKit from '../../WindowWithFrontendKit';\n\nexport default (): void => {\n  const { boschFrontendKit } = (window as unknown) as WindowWithFrontendKit;\n\n  const examples = document.querySelectorAll(\n    '.frontend-kit-example_banner-notification',\n  );\n  [...examples].forEach(container => {\n    const notificationId = container.getAttribute('data-frok-notification');\n\n    const notificationElement = boschFrontendKit.Notification.findNotification(\n      notificationId,\n    );\n    const notification = notificationElement.component;\n\n    const trigger = container.querySelector('[data-frok-action=\"show\"]');\n\n    trigger.addEventListener('click', () =>\n      boschFrontendKit.Notification.showNotification(notificationId),\n    );\n    notification.addEventListener('closeClicked', () => notification.hide());\n  });\n};\n","// Add randomly between 2 to 10% progress.\nfunction setProgress(container: Element): void {\n  let currentValue: number = Number(container.getAttribute('data-progress'));\n  if(currentValue === 100) {\n    currentValue = 0;\n  }\n\n  const progress: number = Math.floor(Math.random() * (10 - 2) + 5);\n  let newValue: number = currentValue + progress;\n\n  if (newValue > 100) {\n    newValue = 100;\n  }\n  container.setAttribute('data-progress', `${newValue}`);\n}\n\nexport default (): void => {\n  const examples = document.querySelectorAll('#random-progress');\n  examples.forEach(container => {\n    window.setInterval(setProgress.bind(this, container), 1000);\n  });\n};\n","import ElementWithComponent from '../../ElementWithComponent';\nimport FormField from './index';\n\nexport default (): void => {\n  const exampleContainers = document.querySelectorAll(\n    '.frontend-kit-example_form-field-notification',\n  );\n\n  [...exampleContainers].forEach(container => {\n    const exampleButtons = container.querySelectorAll('.a-button');\n\n    const example = container.querySelector(\n      '.m-form-field',\n    ) as ElementWithComponent<FormField>;\n\n    const formField = example.component;\n\n    [...exampleButtons].forEach(button => {\n      const state = button.getAttribute('data-frok-action');\n      if (state !== 'reset') {\n        button.addEventListener('click', () => {\n          formField.setState(state, state);\n        });\n      } else {\n        button.addEventListener('click', () => {\n          formField.setState('neutral');\n        });\n      }\n    });\n  });\n};\n","import WindowWithFrontendKit from '../../WindowWithFrontendKit';\n\nexport default (): void => {\n  const { boschFrontendKit } = (window as unknown) as WindowWithFrontendKit;\n\n  const dialogExamples = document.getElementsByClassName(\n    'frontend-kit-example_modal-dialog',\n  );\n  [...dialogExamples].forEach(container => {\n    // a trigger that launches the modal\n    const trigger = container.getElementsByClassName('a-button')[0];\n    // the dialog identifier\n    const dialogId = container.getAttribute('data-frok-show-dialog');\n\n    // the element containing the dialog\n    const dialogElement = boschFrontendKit.Dialog.findDialog(dialogId);\n\n    // the actual component\n    const dialog = dialogElement.component;\n\n    dialog.addEventListener('confirmed', () => dialog.hide());\n    dialog.addEventListener('canceled', () => dialog.hide());\n    dialog.addEventListener('backgroundClicked', () => dialog.hide());\n    dialog.addEventListener('closeClicked', () => dialog.hide());\n\n    if (trigger) {\n      trigger.addEventListener('click', () =>\n        boschFrontendKit.Dialog.showDialog(dialogId),\n      );\n    }\n  });\n};\n","import WindowWithFrontendKit from '../../WindowWithFrontendKit';\n\nexport default (): void => {\n  const { boschFrontendKit } = (window as unknown) as WindowWithFrontendKit;\n\n  // every button with the right class will show the \"demo\" modal on click\n  const modalShowButtons = document.querySelectorAll('.frontend-kit-example_modal-lightbox');\n\n  modalShowButtons.forEach(container => {\n    const showTrigger = container.querySelector(\n      '.a-button[data-frok-action=\"show\"]',\n    );\n\n    const modalId = container.getAttribute('data-frok-show-lightbox');\n\n    const modalElement = boschFrontendKit.Lightbox.findLightbox(modalId);\n\n    const modal = modalElement.component;\n\n    // close the modal when the background is clicked\n    modal.addEventListener('backgroundClicked', () => modal.hide());\n\n    if (showTrigger) {\n      showTrigger.addEventListener('click', () =>\n        boschFrontendKit.Lightbox.showLightbox(modalId),\n      );\n    }\n  });\n};\n","import ElementWithComponent from '../../ElementWithComponent';\nimport Popover from '.';\n\nexport default (): void => {\n  // every button with the right class will show the \"demo\" modal on click\n  const examples = document.getElementsByClassName(\n    'frontend-kit-example_attached-popover',\n  );\n  [...examples].forEach(container => {\n    const showTrigger = container.querySelector(\n      '.a-button[data-frok-action=\"show\"]',\n    ) as HTMLElement;\n\n    const popoverElement = container.querySelector(\n      '.m-popover',\n    ) as ElementWithComponent<Popover>;\n\n    if (!popoverElement) {\n      console.warn('Could not find a popover inside the example - skipping.');\n      return;\n    }\n\n    const popover = popoverElement.component;\n\n    popover.attach(showTrigger);\n\n    showTrigger.addEventListener('click', () => popover.show());\n\n    popover.addEventListener('buttonClicked', () => popover.hide());\n    popover.addEventListener('closeButtonClicked', () => popover.hide());\n  });\n\n  const galleryExamples = document.querySelectorAll(\n    '.frontend-kit-example_attached-popover-gallery',\n  );\n  [...galleryExamples].forEach(galleryExample => {\n    const singleExamples = galleryExample.children;\n\n    [...singleExamples].forEach(example => {\n      const trigger = [...example.children].filter(child =>\n        child.classList.contains('a-button'),\n      )[0] as HTMLElement;\n\n      const popoverElement = [...example.children].filter(child =>\n        child.classList.contains('m-popover'),\n      )[0] as ElementWithComponent<Popover>;\n\n      if (!popoverElement) {\n        console.warn(\n          'Could not find a popover inside the gallery example - skipping.',\n        );\n        return;\n      }\n\n      const popover = popoverElement.component;\n\n      popover.attach(trigger);\n\n      trigger.addEventListener('click', () => {\n        if (popoverElement.classList.contains('-show')) {\n          popover.hide();\n        } else {\n          popover.show();\n        }\n      });\n\n      popover.addEventListener('buttonClicked', () => popover.hide());\n      popover.addEventListener('closeButtonClicked', () => popover.hide());\n    });\n  });\n};\n","import checkboxDemo from './atoms/checkbox/demo';\nimport boxDemo from './atoms/box/demo';\nimport notificationDemo from './atoms/notification/demo';\nimport progressIndicatorDemo from './atoms/progressIndicator/demo';\n\nimport formFieldDemo from './molecules/formField/demo';\nimport dialogDemo from './molecules/dialog/demo';\nimport lightboxDemo from './molecules/lightbox/demo';\nimport popoverDemo from './molecules/popover/demo';\n\n// construct demos array to call later\nconst demos: Function[] = [\n  checkboxDemo,\n  boxDemo,\n  dialogDemo,\n  lightboxDemo,\n  popoverDemo,\n  notificationDemo,\n  progressIndicatorDemo,\n  formFieldDemo,\n];\n\n// add demo loader to load all given demos\nconst demoLoader = (): void => demos.forEach(f => f.call(this));\n\n/**\n * Custom Event \"bosch.frontend-kit-done\" will fire as soon as\n * the bootstrapping of our Components is done.\n * After the Event fired, demos are safe to be loaded.\n */\ndocument.addEventListener('bosch.frontend-kit-done', demoLoader);\n"]}