{"version":3,"sources":["baseComponent.ts","atoms/textField/index.ts","atoms/textArea/index.ts","atoms/checkbox/index.ts","atoms/box/index.ts","atoms/notification/index.ts","atoms/progressIndicator/index.ts","atoms/valueModificator/index.ts","atoms/slider/index.ts","molecules/dialog/index.ts","molecules/popover/constants.ts","molecules/popover/index.ts","molecules/lightbox/index.ts","molecules/formField/index.ts","atoms/dropdown/index.ts","atoms/pageIndicator/functions/updateIndicatorState.ts","atoms/pageIndicator/functions/createPaginationArray.ts","atoms/pageIndicator/functions/updatePagination.ts","atoms/pageIndicator/index.ts","index.ts"],"names":[],"mappings":"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","file":"frontend-kit.js","sourceRoot":"../src/frontend-kit","sourcesContent":["import ElementWithComponent from './ElementWithComponent';\n\ninterface ConstructorWithEvents extends Function {\n  events?: string[];\n}\n\n/**\n * function to check if the requested event can be bound to the component\n */\nconst throwIfEventUnknown = (\n  constructorFunction: ConstructorWithEvents,\n  eventName: string,\n): void => {\n  if (!constructorFunction.events.includes(eventName)) {\n    throw new Error(\n      `Unknown event ${eventName} in component ${constructorFunction.name}.`,\n    );\n  }\n};\n\n/**\n * @name    base-component\n * @author Experience One AG\n * @copyright Robert Bosch GmbH\n * @description\n * this base class is the foundation for all vanilla.js component implementations\n * it provides the basic functions we need in each component\n * 1. an event-registry\n * 2. addEventListener Method\n * 3. removeEventListener Method\n * 4. check if the event is available for the component\n * 5. trigger for the given events\n */\nexport default class BaseComponent {\n  protected container: HTMLElement;\n\n  constructor(container: HTMLElement) {\n    /**\n     * store the HTML element\n     */\n    this.container = container;\n\n    const constructorFunction = this.constructor as ConstructorWithEvents;\n\n    /**\n     * set all registry entries to empty arrays so we don't have to do that later\n     */\n    if (constructorFunction.events) {\n      constructorFunction.events.forEach(eventName => {\n        this.eventRegistry[eventName] = [];\n      });\n    }\n\n    if ((container as ElementWithComponent).component) {\n      // if there's a component already here, we're already done\n      return;\n    }\n\n    /**\n     * set the component property to return this instance\n     * can be used to use the API from outside of this codebase\n     */\n    Object.defineProperty(container, 'component', {\n      get: () => this,\n    });\n  }\n\n  /**\n   * a registry for custom events and their callbacks\n   */\n  protected eventRegistry: {\n    [eventName: string]: Function[];\n  } = {};\n\n  /**\n   * adds a callback for the given event\n   * @return a unsubscribe function to remove the listener\n   */\n  public addEventListener = (\n    eventName: string,\n    callback: Function,\n  ): Function => {\n    throwIfEventUnknown(this.constructor as ConstructorWithEvents, eventName);\n    const callbackIndex = this.eventRegistry[eventName].push(callback) - 1;\n\n    return (): void => {\n      this.eventRegistry[eventName][callbackIndex] = null;\n    };\n  };\n\n  /**\n   * removes all instances of a listener by reference\n   * can be used if the unsubscribe cannot be kept when using addEventListener\n   */\n  public removeEventListener = (\n    eventName: string,\n    callbackReference: Function,\n  ): void => {\n    throwIfEventUnknown(this.constructor as ConstructorWithEvents, eventName);\n\n    this.eventRegistry[eventName] = this.eventRegistry[\n      eventName\n    ].map(callback => (callback === callbackReference ? null : callback));\n  };\n\n  /**\n   * triggers a given event with the parameters given, if any\n   */\n  protected triggerEvent = (\n    eventName: string,\n    // unfortunately, we cannot TS-specify the types and amount of parameters passed here :/\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    ...params: any[]\n  ): void => {\n    (this.eventRegistry[eventName] || []).forEach(callback => {\n      if (typeof callback === 'function') {\n        callback(...params);\n      }\n    });\n  };\n}\n","import BaseComponent from '../../baseComponent';\n\nconst TOGGLE_ICON = '.a-text-field__icon';\nconst PASSWORD_VISIBLE_CLASS = `-password-visible`;\n\nexport default class TextField extends BaseComponent {\n  protected static events = ['onClick'];\n\n  private toggleIcon: HTMLElement;\n\n  private input: HTMLElement;\n\n  constructor(container: HTMLElement) {\n    super(container);\n\n    /**\n     * Define DOM Elements and Variables\n     */\n    this.toggleIcon = container.querySelector(TOGGLE_ICON);\n    this.input = container.querySelector('input');\n\n    // register change event for the select\n    if (this.toggleIcon instanceof HTMLElement) {\n      this.toggleIcon.addEventListener('click', () => {\n        const { input } = this;\n\n        if (input.getAttribute('type') === 'password') {\n          container.classList.add(PASSWORD_VISIBLE_CLASS);\n          input.setAttribute('type', 'text');\n        } else {\n          container.classList.remove(PASSWORD_VISIBLE_CLASS);\n          input.setAttribute('type', 'password');\n        }\n      });\n    }\n  }\n}\n","import BaseComponent from '../../baseComponent';\n\nconst TEXTAREA = 'textarea';\n\nexport default class TextArea extends BaseComponent {\n  protected static events = ['onInput'];\n\n  private textArea: HTMLTextAreaElement;\n\n  private shadow: HTMLDivElement;\n\n  constructor(container: HTMLElement) {\n    super(container);\n\n    /**\n     * Define DOM Elements and Variables\n     */\n    this.textArea = container.querySelector(TEXTAREA);\n\n    this.shadow = container.querySelector('.a-text-area__shadow');\n\n    if (this.shadow && this.textArea instanceof HTMLTextAreaElement) {\n      // register change event for the textarea\n      this.textArea.addEventListener('input', () => {\n        this.shadow.textContent = `${this.textArea.value}\\r\\n`;\n        this.textArea.style.height = `${this.shadow.offsetHeight}px`;\n      });\n    }\n  }\n}\n","import BaseComponent from '../../baseComponent';\n\nconst INDETERMINATE_CLASS = 'a-checkbox--indeterminate';\n\nexport default class Checkbox extends BaseComponent {\n  private input: HTMLInputElement;\n\n  constructor(container: HTMLElement) {\n    super(container);\n\n    this.input = container.querySelector('input');\n\n    if (this.input) {\n      this.input.addEventListener('change', () => {\n        container.classList.remove(INDETERMINATE_CLASS);\n      });\n    }\n  }\n}\n","import BaseComponent from '../../baseComponent';\nimport ElementWithComponent from '../../ElementWithComponent';\n\nconst SHOW_CLASS = '-show';\nconst MODAL_CLASS = 'a-box--modal';\nconst BODY_UNSCROLLABLE_CLASS = '-unscrollable';\n\n/**\n * prevent the body from scrolling\n */\nconst makeBodyUnscrollable = (): void => {\n  document.body.classList.add(BODY_UNSCROLLABLE_CLASS);\n};\n\n/**\n * re-enable scrolling on the body\n */\nconst makeBodyScrollable = (): void => {\n  document.body.classList.remove(BODY_UNSCROLLABLE_CLASS);\n};\n\n/**\n * Functionality of Box component\n */\nclass Box extends BaseComponent {\n  private static events = ['backgroundClicked'];\n\n  /**\n   * returns a valid modal ID to place into the DOM for the given string\n   */\n  public static modalId = (id: string): string => `frontend-kit-modal-${id}`;\n\n  /**\n   * finds a modal by the given modal ID\n   */\n  public static findModal = (id: string): ElementWithComponent<Box> | null =>\n    document.getElementById(Box.modalId(id)) as ElementWithComponent<Box>;\n\n  /**\n   * shows the modal with the given modal ID, if it exists\n   */\n  public static showModal = (id: string): void => {\n    const modalElement = Box.findModal(id);\n\n    if (!modalElement) {\n      console.warn(`Could not find a modal with id ${id} to show.`);\n    } else {\n      modalElement.component.show();\n    }\n  };\n\n  /**\n   * hides the modal with the given modal ID, if it exists\n   */\n  public static hideModal = (id: string): void => {\n    const modalElement = Box.findModal(id);\n\n    if (!modalElement) {\n      console.warn(`Could not find a modal with id ${id} to hide.`);\n    } else {\n      modalElement.component.hide();\n    }\n  };\n\n  constructor(container: HTMLElement) {\n    super(container);\n\n    if (container.classList.contains(MODAL_CLASS)) {\n      // immediately move the modal to the end of the body, so the \"fullscreen modal\" aspect works\n      document.body.appendChild(container);\n    }\n\n    container.addEventListener('click', (event: MouseEvent) => {\n      if (event.target === container) {\n        this.triggerEvent('backgroundClicked');\n      }\n    });\n  }\n\n  /**\n   * shows this modal\n   */\n  public show(): void {\n    this.container.classList.add(SHOW_CLASS);\n\n    if (this.isModal()) {\n      makeBodyUnscrollable();\n    }\n  }\n\n  /**\n   * hides this modal\n   */\n  public hide(): void {\n    this.container.classList.remove(SHOW_CLASS);\n\n    // @TODO handle more than one open modal by actually checking that all are \"closed\"\n    makeBodyScrollable();\n  }\n\n  /**\n   * returns true if this a modal with dimmed background\n   */\n  public isModal(): boolean {\n    return this.container.classList.contains(MODAL_CLASS);\n  }\n}\n\nexport default Box;\n","import BaseComponent from '../../baseComponent';\nimport ElementWithComponent from '../../ElementWithComponent';\n\nconst BANNER_CLASS = 'a-notification--banner';\nconst SHOW_CLASS = '-show';\n\n/**\n * Behavior of a banner notification\n */\nclass Notification extends BaseComponent {\n  private static events = ['closeClicked'];\n\n  /**\n   * returns a DOM id for the given notification id\n   */\n  public static notificationId = (id: string): string =>\n    `frontend-kit-notification-${id}`;\n\n  /**\n   * finds a notification for the given notification id\n   */\n  public static findNotification = (\n    id: string,\n  ): ElementWithComponent<Notification> | null => {\n    return document.getElementById(\n      Notification.notificationId(id),\n    ) as ElementWithComponent<Notification>;\n  };\n\n  /**\n   * shows the notification with the given notification id\n   */\n  public static showNotification = (id: string): void => {\n    const notificationElement = Notification.findNotification(id);\n\n    if (!notificationElement) {\n      console.warn(`Could not find a notification with id ${id} to show`);\n    } else {\n      notificationElement.component.show();\n    }\n  };\n\n  /**\n   * hides the notification with the given notification id\n   */\n  public static hideNotification = (id: string): void => {\n    const notificationElement = Notification.findNotification(id);\n\n    if (!notificationElement) {\n      console.warn(`Could not find a notification with id ${id} to hide`);\n    } else {\n      notificationElement.component.hide();\n    }\n  };\n\n  constructor(container: HTMLElement) {\n    super(container);\n\n    // if this is a banner, move it to the end of the DOM to ensure that layout is correct\n    if (container.classList.contains(BANNER_CLASS)) {\n      document.body.appendChild(container);\n    }\n\n    /**\n     * the close button\n     */\n    const closeButton = container.querySelector('[data-frok-action=\"close\"]');\n\n    if (closeButton) {\n      closeButton.addEventListener('click', () => {\n        this.triggerEvent('closeClicked');\n      });\n    }\n  }\n\n  /**\n   * shows this notification\n   */\n  public show(): void {\n    this.container.classList.add(SHOW_CLASS);\n  }\n\n  /**\n   * hides this notification\n   */\n  public hide(): void {\n    this.container.classList.remove(SHOW_CLASS);\n  }\n}\n\nexport default Notification;\n","import BaseComponent from '../../baseComponent';\n\nexport default class ProgressIndicator extends BaseComponent {\n  constructor(container: HTMLElement) {\n    super(container);\n\n    const observerOptions = {\n      childList: false,\n      subtree: false,\n      attributes: true,\n      attributeFilter: ['data-progress'],\n    };\n\n    const observer = new MutationObserver(ProgressIndicator.callback);\n    observer.observe(container, observerOptions);\n  }\n\n  static setWidth(innerBar: HTMLElement, progress: number): void {\n    innerBar.setAttribute('style', `width:${progress}%`);\n  }\n\n  static callback(mutationList, observer): void {\n    mutationList.forEach(mutation => {\n      const innerBar = mutation.target.querySelector(\n        '.a-progress-indicator__inner-bar',\n      );\n      ProgressIndicator.setWidth(innerBar, mutation.target.dataset.progress);\n    });\n  }\n}\n","import BaseComponent from '../../baseComponent';\n\nconst MINUS_ICON = 'a-value-modificator__minus-icon';\nconst PLUS_ICON = 'a-value-modificator__plus-icon';\nconst DISABLED = 'a-value-modificator__icon-disabled';\n\nconst PRESSED = '-pressed';\n\nexport default class ValueModificator extends BaseComponent {\n  protected static events = ['onClick'];\n\n  private readonly minusIcon: HTMLElement;\n\n  private readonly plusIcon: HTMLElement;\n\n  private readonly input: HTMLInputElement;\n\n  constructor(container: HTMLElement) {\n    super(container);\n\n    /**\n     * Define DOM Elements and Variables\n     */\n    this.minusIcon = container.querySelector(`.${MINUS_ICON}`);\n    this.plusIcon = container.querySelector(`.${PLUS_ICON}`);\n    this.input = container.querySelector('input');\n\n    if (this.input instanceof HTMLInputElement) {\n      if (!this.input.value) {\n        this.input.value = '0';\n      }\n    }\n\n    if (this.minusIcon instanceof HTMLElement) {\n      this.initElement(this.minusIcon);\n\n      this.minusIcon.onclick = (): void => {\n        this.stepDownInputValue();\n      };\n      this.minusIcon.addEventListener('mousedown', () => {\n        this.togglePressed(this.minusIcon);\n      });\n      this.minusIcon.addEventListener('mouseup', () => {\n        this.togglePressed(this.minusIcon);\n      });\n    }\n\n    if (this.plusIcon instanceof HTMLElement) {\n      this.initElement(this.plusIcon);\n\n      this.plusIcon.onclick = (): void => {\n        this.stepUpInputValue();\n      };\n      this.plusIcon.addEventListener('mousedown', () => {\n        this.togglePressed(this.plusIcon);\n      });\n      this.plusIcon.addEventListener('mouseup', () => {\n        this.togglePressed(this.plusIcon);\n      });\n    }\n  }\n\n  initElement(element: HTMLElement): void {\n    if (this.input.value === this.input.min && element === this.minusIcon) {\n      this.disable(element);\n    }\n\n    if (this.input.value === this.input.max && element === this.plusIcon) {\n      this.disable(element);\n    }\n  }\n\n  stepUpInputValue(): void {\n    if (this.container.classList.contains('-disabled')) {\n      return;\n    }\n\n    const value = Number.isNaN(this.input.valueAsNumber)\n      ? 0\n      : this.input.valueAsNumber;\n\n    const step: number = +this.input.step;\n    let update = value + step;\n\n    this.enable(this.minusIcon);\n\n    if (update >= +this.input.max) {\n      this.disable(this.plusIcon);\n      update = +this.input.max;\n    }\n\n    this.input.value = update.toString();\n  }\n\n  stepDownInputValue(): void {\n    if (this.container.classList.contains('-disabled')) {\n      return;\n    }\n\n    const value = Number.isNaN(this.input.valueAsNumber)\n      ? 0\n      : this.input.valueAsNumber;\n\n    const step: number = +this.input.step;\n    let update = value - step;\n\n    this.enable(this.plusIcon);\n\n    if (update <= +this.input.min) {\n      this.disable(this.minusIcon);\n      update = +this.input.min;\n    }\n\n    this.input.value = update.toString();\n  }\n\n  disable(element: HTMLElement): void {\n    element.classList.add(DISABLED);\n  }\n\n  enable(element: HTMLElement): void {\n    element.classList.remove(DISABLED);\n  }\n\n  togglePressed(element: HTMLElement): void {\n    if (this.container.classList.contains('-disabled')) {\n      return;\n    }\n    if (element.classList.contains(PRESSED)) {\n      element.classList.remove(PRESSED);\n    } else {\n      element.classList.add(PRESSED);\n    }\n  }\n}\n","import BaseComponent from '../../baseComponent';\n\nexport default class TextField extends BaseComponent {\n  protected static events = ['onClick'];\n\n  private readonly slider: HTMLInputElement;\n\n  private readonly tooltip: HTMLElement;\n\n  constructor(container: HTMLElement) {\n    super(container);\n\n    /**\n     * Define DOM Elements and Variables\n     */\n    this.slider = container.querySelector('.a-slider input[type=range]');\n    this.tooltip = container.querySelector('.a-slider__tooltip');\n\n    // init slider progress\n    this.setSliderProgress();\n    // init tooltip\n    this.setTooltip();\n\n    if (this.slider instanceof HTMLElement) {\n      this.slider.addEventListener('input', () => {\n        this.setSliderProgress();\n        this.setTooltip();\n      });\n      this.slider.addEventListener('mouseenter', () => {\n        this.toggleTooltipVisibility(false);\n        this.setSliderColor('#00629a');\n      });\n      this.slider.addEventListener('mouseleave', () => {\n        this.toggleTooltipVisibility(true);\n        this.setSliderColor('#007bc0');\n      });\n      this.slider.addEventListener('mousedown', () => {\n        this.setSliderColor('#004975');\n      });\n      this.slider.addEventListener('mouseup', () => {\n        this.setSliderColor('#00629a');\n      });\n    }\n  }\n\n  private setSliderProgress(): void {\n    const progress = `${(this.slider.valueAsNumber / +this.slider.max) * 100}%`;\n    this.slider.style.setProperty('--progress', progress);\n  }\n\n  private setTooltip(): void {\n    if (!this.tooltip) {\n      return;\n    }\n\n    const min: number = this.slider.min ? Number(this.slider.min) : 0;\n\n    const max: number = this.slider.max ? Number(this.slider.max) : 100;\n    const percentage = Number(\n      ((this.slider.valueAsNumber - min) * 100) / (max - min),\n    );\n\n    this.calculateAndSetTooltipPosition(percentage);\n\n    // fill tooltip with data\n    if (this.tooltip.getAttribute('tooltip-type') === 'relative') {\n      this.tooltip.innerHTML = `${percentage} %`;\n    } else if (this.tooltip.getAttribute('tooltip-unit')) {\n      this.tooltip.innerHTML = `${this.slider.value}${this.tooltip.getAttribute(\n        'tooltip-unit',\n      )}`;\n    } else {\n      this.tooltip.innerHTML = this.slider.value;\n    }\n  }\n\n  /**\n   * The tooltip needs to be placed directly over the center of the thumb element.\n   * To calculate where the tooltip is placed, we use the percentage of the slider as a base.\n   * Then half the tooltip width is subtracted.\n   * When the thumb element is placed at the ends of the spectrum, its center is not placed directly over the percentage value.\n   * The offset caused by the thumb position follows a linear function based on the percentage.\n   * The position of the tooltip needs to be corrected for that.\n   *\n   * @param percentage  The percentage value of the slider\n   */\n  private calculateAndSetTooltipPosition(percentage: number): void {\n    const tooltipOffsetRem = this.tooltip.offsetWidth / 2 / 16;\n    const thumbOffsetFactor = percentage / 100 - 0.5;\n\n    // thumb has 1.5rem\n    const offsetRem = tooltipOffsetRem + thumbOffsetFactor * 1.5;\n\n    this.tooltip.style.left = `calc(${percentage}% - (${offsetRem}rem))`;\n  }\n\n  private toggleTooltipVisibility(isHidden: boolean): void {\n    if (!this.tooltip) {\n      return;\n    }\n    this.tooltip.style.visibility = isHidden ? 'hidden' : 'visible';\n  }\n\n  private setSliderColor(hex: string): void {\n    this.slider.style.setProperty('--color', hex);\n  }\n}\n","import BaseComponent from '../../baseComponent';\nimport ElementWithComponent from '../../ElementWithComponent';\nimport Box from '../../atoms/box';\n\nclass Dialog extends BaseComponent {\n  protected static events = [\n    'confirmed',\n    'canceled',\n    'backgroundClicked',\n    'closeClicked',\n  ];\n\n  /**\n   * returns a valid dialog ID to place into the modal box for the given string\n   */\n  public static dialogId = (id: string): string => `frontend-kit-dialog-${id}`;\n\n  /**\n   * finds a dialog by the given dialog ID\n   */\n  public static findDialog = (\n    id: string,\n  ): ElementWithComponent<Dialog> | null =>\n    document.getElementById(Dialog.dialogId(id)) as ElementWithComponent<\n      Dialog\n    >;\n\n  /**\n   * shows the modal with the given modal ID, if it exists\n   */\n  public static showDialog = (id: string): void => {\n    const dialogElement = Dialog.findDialog(id);\n\n    if (!dialogElement) {\n      console.warn(`Could not find a dialog with id ${id} to show.`);\n    } else {\n      dialogElement.component.show();\n    }\n  };\n\n  /**\n   * hides the modal with the given modal ID, if it exists\n   */\n  public static hideDialog = (id: string): void => {\n    const dialogElement = Dialog.findDialog(id);\n\n    if (!dialogElement) {\n      console.warn(`Could not find a dialog with id ${id} to hide.`);\n    } else {\n      dialogElement.component.hide();\n    }\n  };\n\n  /**\n   * the underlying box component\n   */\n  private box: Box;\n\n  constructor(container: HTMLElement) {\n    super(container);\n\n    // setup event buttons as event triggers\n    const confirmButton = container.querySelector(\n      '[data-frok-action=\"confirm\"]',\n    );\n    if (confirmButton instanceof Element) {\n      confirmButton.addEventListener('click', () => {\n        this.triggerEvent('confirmed');\n      });\n    }\n\n    const cancelButton = container.querySelector('[data-frok-action=\"cancel\"]');\n    if (cancelButton instanceof Element) {\n      cancelButton.addEventListener('click', () => {\n        this.triggerEvent('canceled');\n      });\n    }\n\n    const closeButton = container.querySelector('[data-frok-action=\"close\"]');\n    if (closeButton instanceof Element) {\n      closeButton.addEventListener('click', () => {\n        this.triggerEvent('closeClicked');\n      });\n    }\n\n    // setup box sub-component\n    const boxElement = container.querySelector('.a-box, .a-box--modal');\n\n    if (boxElement) {\n      this.box = new Box(boxElement as HTMLElement);\n\n      if (this.box.isModal()) {\n        // move to the end as well\n        document.body.appendChild(container);\n        // and move the box back into here\n        container.appendChild(boxElement);\n      }\n\n      this.box.addEventListener('backgroundClicked', () =>\n        this.triggerEvent('backgroundClicked'),\n      );\n    } else {\n      throw new Error(\n        'Dialog is missing a box, please check your dialog markup',\n      );\n    }\n  }\n\n  /**\n   * shows this dialog\n   */\n  public show(): void {\n    this.box.show();\n  }\n\n  /**\n   * hides this dialog\n   */\n  public hide(): void {\n    this.box.hide();\n  }\n}\n\nexport default Dialog;\n","enum ArrowPosition {\n  TOP_LEFT = 'top-left',\n  TOP_CENTER = 'top-center',\n  TOP_RIGHT = 'top-right',\n  LEFT_TOP = 'left-top',\n  LEFT_CENTER = 'left-center',\n  LEFT_BOTTOM = 'left-bottom',\n  BOTTOM_LEFT = 'bottom-left',\n  BOTTOM_CENTER = 'bottom-center',\n  BOTTOM_RIGHT = 'bottom-right',\n  RIGHT_BOTTOM = 'right-bottom',\n  RIGHT_CENTER = 'right-center',\n  RIGHT_TOP = 'right-top'\n}\n\nconst arrowPositions: ArrowPosition[] = [\n  ArrowPosition.TOP_LEFT,\n  ArrowPosition.TOP_CENTER,\n  ArrowPosition.TOP_RIGHT,\n  ArrowPosition.LEFT_TOP,\n  ArrowPosition.LEFT_CENTER,\n  ArrowPosition.LEFT_BOTTOM,\n  ArrowPosition.BOTTOM_LEFT,\n  ArrowPosition.BOTTOM_CENTER,\n  ArrowPosition.BOTTOM_RIGHT,\n  ArrowPosition.RIGHT_BOTTOM,\n  ArrowPosition.RIGHT_CENTER,\n  ArrowPosition.RIGHT_TOP\n];\n\nconst arrowClasses = arrowPositions.map(position => `-${position}`);\n\nexport { ArrowPosition, arrowClasses, arrowPositions };\n","import BaseComponent from '../../baseComponent';\n\nimport { ArrowPosition, arrowClasses } from './constants';\n\nconst SHOW_CLASS = '-show';\nconst DETACHED_CLASS = '-detached';\n\ninterface Offset {\n  left: number;\n  top: number;\n}\ninterface StringOffset {\n  left: string;\n  top: string;\n}\n\nconst getPositionClientRect = (element: HTMLElement): ClientRect => {\n  const clientRect = element.getBoundingClientRect();\n\n  return {\n    ...clientRect,\n    left: clientRect.left + window.pageXOffset,\n    top: clientRect.top + window.pageYOffset,\n    bottom: clientRect.bottom + window.pageYOffset,\n    right: clientRect.right + window.pageXOffset,\n  };\n};\n\nconst getTargetOffsetForPositionAndArrowClass = (\n  position: ClientRect,\n  arrowClass: string,\n): Offset => {\n  switch (arrowClass) {\n    case ArrowPosition.RIGHT_CENTER:\n    case ArrowPosition.RIGHT_TOP:\n    case ArrowPosition.RIGHT_BOTTOM:\n      return {\n        left: position.left,\n        top: position.top + (position.bottom - position.top) / 2,\n      };\n    case ArrowPosition.LEFT_CENTER:\n    case ArrowPosition.LEFT_TOP:\n    case ArrowPosition.LEFT_BOTTOM:\n      return {\n        left: position.right,\n        top: position.top + (position.bottom - position.top) / 2,\n      };\n    case ArrowPosition.BOTTOM_CENTER:\n    case ArrowPosition.BOTTOM_LEFT:\n    case ArrowPosition.BOTTOM_RIGHT:\n      return {\n        left: position.left + (position.right - position.left) / 2,\n        top: position.top,\n      };\n    case ArrowPosition.TOP_CENTER:\n    case ArrowPosition.TOP_LEFT:\n    case ArrowPosition.TOP_RIGHT:\n    default:\n      return {\n        left: position.left + (position.right - position.left) / 2,\n        top: position.bottom,\n      };\n  }\n};\n\nconst getPositionOffsetForDimensionAndArrowClass = (\n  dimension: ClientRect,\n  arrowClass: string,\n): Offset => {\n  const left = ((): number => {\n    switch (arrowClass) {\n      case ArrowPosition.BOTTOM_RIGHT:\n      case ArrowPosition.TOP_RIGHT:\n      case ArrowPosition.RIGHT_TOP:\n      case ArrowPosition.RIGHT_CENTER:\n      case ArrowPosition.RIGHT_BOTTOM:\n        return dimension.right - dimension.left;\n      case ArrowPosition.BOTTOM_LEFT:\n      case ArrowPosition.TOP_LEFT:\n      case ArrowPosition.LEFT_TOP:\n      case ArrowPosition.LEFT_CENTER:\n      case ArrowPosition.LEFT_BOTTOM:\n        return 0;\n      case ArrowPosition.BOTTOM_CENTER:\n      case ArrowPosition.TOP_CENTER:\n      default:\n        return (dimension.right - dimension.left) / 2;\n    }\n  })();\n\n  const top = ((): number => {\n    switch (arrowClass) {\n      case ArrowPosition.LEFT_CENTER:\n      case ArrowPosition.RIGHT_CENTER:\n        return (dimension.bottom - dimension.top) / 2;\n      case ArrowPosition.LEFT_BOTTOM:\n      case ArrowPosition.RIGHT_BOTTOM:\n      case ArrowPosition.BOTTOM_LEFT:\n      case ArrowPosition.BOTTOM_RIGHT:\n      case ArrowPosition.BOTTOM_CENTER:\n        return dimension.bottom - dimension.top;\n      case ArrowPosition.LEFT_TOP:\n      case ArrowPosition.RIGHT_TOP:\n      case ArrowPosition.TOP_LEFT:\n      case ArrowPosition.TOP_RIGHT:\n      case ArrowPosition.TOP_CENTER:\n      default:\n        return 0;\n    }\n  })();\n\n  return { left, top };\n};\n\nconst getStaticOffsetForArrowClass = (arrowClass: string): StringOffset => {\n  const left = ((): string => {\n    switch (arrowClass) {\n      case ArrowPosition.RIGHT_TOP:\n      case ArrowPosition.RIGHT_CENTER:\n      case ArrowPosition.RIGHT_BOTTOM:\n        return '- 1.75rem';\n      case ArrowPosition.LEFT_BOTTOM:\n      case ArrowPosition.LEFT_CENTER:\n      case ArrowPosition.LEFT_BOTTOM:\n        return '+ 1.75rem';\n      case ArrowPosition.BOTTOM_RIGHT:\n      case ArrowPosition.TOP_RIGHT:\n        return '+ 1.75rem';\n      case ArrowPosition.BOTTOM_LEFT:\n      case ArrowPosition.TOP_LEFT:\n        return '- 1.75rem';\n      case ArrowPosition.BOTTOM_CENTER:\n      case ArrowPosition.TOP_CENTER:\n      default:\n        return '0';\n    }\n  })();\n\n  const top = ((): string => {\n    switch (arrowClass) {\n      case ArrowPosition.LEFT_CENTER:\n      case ArrowPosition.RIGHT_CENTER:\n        return '0';\n      case ArrowPosition.LEFT_TOP:\n      case ArrowPosition.RIGHT_TOP:\n      case ArrowPosition.BOTTOM_LEFT:\n      case ArrowPosition.BOTTOM_RIGHT:\n      case ArrowPosition.BOTTOM_CENTER:\n        return '- 1.75rem';\n      case ArrowPosition.LEFT_BOTTOM:\n      case ArrowPosition.RIGHT_BOTTOM:\n      case ArrowPosition.TOP_LEFT:\n      case ArrowPosition.TOP_RIGHT:\n      case ArrowPosition.TOP_CENTER:\n      default:\n        return '+ 1.75rem';\n    }\n  })();\n\n  return { left, top };\n};\n\nconst getArrowClass = (element: HTMLElement): string => {\n  const candidates = arrowClasses.filter(className =>\n    element.classList.contains(className),\n  );\n\n  if (candidates.length === 0) {\n    return 'top-center';\n  }\n\n  return candidates[0].substring(1);\n};\n\nclass Popover extends BaseComponent {\n  private static events = ['buttonClicked', 'closeButtonClicked'];\n\n  constructor(container: HTMLElement) {\n    super(container);\n\n    const closeButton = container.querySelector('.a-button--close');\n    const button = container.querySelector('.a-button:not(.a-button--close)');\n\n    if (button) {\n      button.addEventListener('click', () =>\n        this.triggerEvent('buttonClicked'),\n      );\n    }\n\n    if (closeButton) {\n      closeButton.addEventListener('click', () =>\n        this.triggerEvent('closeButtonClicked'),\n      );\n    }\n  }\n\n  public attach(target: HTMLElement): Popover {\n    document.body.appendChild(this.container);\n    this.container.classList.remove(DETACHED_CLASS);\n\n    const targetRect = getPositionClientRect(target);\n\n    const arrowClass = getArrowClass(this.container);\n\n    this.container.style.left = '-9999px';\n    this.container.style.display = 'block';\n\n    const dimensions = this.container.getBoundingClientRect();\n\n    const targetOffset = getTargetOffsetForPositionAndArrowClass(\n      targetRect,\n      arrowClass,\n    );\n\n    const positionOffset = getPositionOffsetForDimensionAndArrowClass(\n      dimensions,\n      arrowClass,\n    );\n\n    const staticOffset = getStaticOffsetForArrowClass(arrowClass);\n\n    const leftPixels = `${targetOffset.left - positionOffset.left}px`;\n    const leftStyle =\n      staticOffset.left === '0'\n        ? leftPixels\n        : `calc(${leftPixels} ${staticOffset.left})`;\n\n    this.container.style.left = leftStyle;\n\n    const topPixels = `${targetOffset.top - positionOffset.top}px`;\n    const topStyle =\n      staticOffset.top === '0'\n        ? topPixels\n        : `calc(${topPixels} ${staticOffset.top})`;\n\n    this.container.style.top = topStyle;\n\n    this.container.style.display = '';\n\n    return this;\n  }\n\n  public show(): void {\n    this.container.classList.add(SHOW_CLASS);\n  }\n\n  public hide(): void {\n    this.container.classList.remove(SHOW_CLASS);\n  }\n}\n\nexport default Popover;\n","import BaseComponent from '../../baseComponent';\nimport ElementWithComponent from '../../ElementWithComponent';\nimport Box from '../../atoms/box';\n\nconst BOX_MARGIN: number = 48;\nconst MEDIA_MAX_WIDTH_568PX: string = '(max-width: 568px)';\nconst DISABLED_CLASS: string = '--disabled';\n\nclass Lightbox extends BaseComponent {\n\n  protected static events = [\n    'collapse',\n    'closeClicked',\n    'next',\n    'back',\n    'backgroundClicked',\n    'show',\n  ];\n\n  /**\n   * the underlying box component\n   */\n  private box: Box;\n\n  /**\n   * Index of currently shown image\n   */\n  private currentIndex: number = 0;\n\n  /**\n   * returns a valid lightbox ID to place into the modal box for the given string\n   */\n  public static lightboxId = (id: string): string =>\n    `frontend-kit-lightbox-${id}`;\n\n\n  /**\n   * finds a lightbox with the given ID\n   */\n  public static findLightbox = (\n    id: string,\n  ): ElementWithComponent<Lightbox> | null =>\n    document.getElementById(Lightbox.lightboxId(id)) as ElementWithComponent<\n      Lightbox\n    >;\n\n  /**\n   * shows the modal with the given modal ID, if it exists\n   */\n  public static showLightbox = (id: string): void => {\n    const lightboxElement = Lightbox.findLightbox(id);\n\n    if (!lightboxElement) {\n      console.warn(`Could not find a lightbox with id ${id} to show.`);\n    } else {\n      lightboxElement.component.show();\n    }\n  };\n\n  /**\n   * hides the modal with the given modal ID, if it exists\n   */\n  public static hideLightbox = (id: string): void => {\n    const lightboxElement = Lightbox.findLightbox(id);\n\n    if (!lightboxElement) {\n      console.warn(`Could not find a lightbox with id ${id} to hide.`);\n    } else {\n      lightboxElement.component.hide();\n    }\n  };\n\n  /**\n   * An array of images used in the lightbox\n   */\n  private readonly images: NodeListOf<Element>;\n  /**\n   * A counter element\n   */\n  private readonly counter: HTMLElement;\n  /**\n   * A next button element\n   */\n  private readonly nextButton: HTMLElement;\n  /**\n   * A back button element\n   */\n  private readonly backButton: HTMLElement;\n  /**\n   * A close button element\n   */\n  private readonly closeButton: HTMLElement;\n  /**\n   * A collapse button element\n   */\n  private readonly collapseButton: HTMLElement;\n\n  constructor(container: HTMLElement) {\n    super(container);\n\n    this.images = container.querySelectorAll('.a-image');\n    this.counter = container.querySelector('.m-lightbox__controlBar__counter');\n    this.closeButton = container.querySelector('[data-frok-action=\"close\"]');\n    \n    this.nextButton = container.querySelector(\n      '[class*=\"m-lightbox__controlBar__nextBtn\"]',\n    );\n    \n    this.backButton = container.querySelector(\n      '[class*=\"m-lightbox__controlBar__backBtn\"]',\n    );\n\n    this.collapseButton = container.querySelector(\n      '[class*=\"m-lightbox__controlBar__collapseBtn__\"]',\n    ); \n\n    this.images.forEach((image: HTMLElement, index: number) => {\n      this.showImageAndCaption(index, index === 0);\n\n      if (this.collapseButton instanceof HTMLElement) {\n        const imageCaption = image.querySelector('figcaption');\n\n        if (imageCaption instanceof Element) {\n          // Show and hide collapsed text on click\n          const expandClass: string = 'm-lightbox__controlBar__collapseBtn__expand';\n          const collapseClass: string = 'm-lightbox__controlBar__collapseBtn__collapse';\n          this.collapseButton.addEventListener('click', (event) => {\n            if (imageCaption.classList.contains('collapsed')) {\n              this.collapseButton.classList.replace(\n                collapseClass,\n                expandClass,\n              );\n\n              imageCaption.classList.replace('collapsed', 'expanded');\n            } else {\n              this.collapseButton.classList.replace(\n                expandClass,\n                collapseClass,\n              );\n\n              this.showImageAndCaption(index, index === this.currentIndex);\n              \n              imageCaption.classList.replace('expanded', 'collapsed');\n            }\n            this.triggerEvent('collapse');\n          });\n\n          this.setLightboxSize();\n\n          // image captions are collapsed as default\n          imageCaption.classList.add('collapsed');\n        }\n      }\n    });\n\n    // Set Up Image sequence\n    if (this.nextButton instanceof HTMLElement) {\n      this.nextButton.addEventListener('click', () => {\n        this.next();\n        this.triggerEvent('next');\n      });\n    }\n\n    if (this.backButton instanceof HTMLElement) {\n      this.backButton.addEventListener('click', () => {\n        this.back();\n        this.triggerEvent('back');\n      });\n    }\n\n    // close Button\n    if (this.closeButton instanceof HTMLElement) {\n      this.closeButton.addEventListener('click', () => {\n        this.hide();\n        this.triggerEvent('closeClicked');\n      });\n    }\n\n    // setup box sub-component\n    const boxElement = container.querySelector('.a-box, .a-box--modal');\n\n    if (boxElement) {\n      this.box = new Box(boxElement as HTMLElement);\n\n      if (this.box.isModal()) {\n        // move to the end as well\n        document.body.appendChild(container);\n        // and move the box back into here\n        container.appendChild(boxElement);\n      }\n\n      this.box.addEventListener('backgroundClicked', () =>\n        this.triggerEvent('backgroundClicked'),\n      );\n\n    } else {\n      throw new Error(\n        'Dialog is missing a box, please check your dialog markup',\n      );\n    }\n  }\n\n  private showImageAndCaption = (imageIndex: number, visibility: boolean): void => {\n    const image = this.images[imageIndex];\n    const caption = image.querySelector('figcaption');\n\n    if (image instanceof HTMLElement) {\n      image.style.display = visibility ? 'block' : 'none';\n    }\n\n    if (caption instanceof HTMLElement) {\n      if (window.matchMedia(MEDIA_MAX_WIDTH_568PX).matches) {\n        const ratioWrapper: HTMLElement = image.querySelector('.a-image__ratioWrapper');\n        ratioWrapper.style.height = 'auto';\n      }\n    }\n  };\n\n  private setArrowState = (): void => {\n    const backBtnEnabled = this.currentIndex === 0;\n    this.backButton.firstElementChild.classList.replace(\n      `m-lightbox__controlBar__back${backBtnEnabled ? '' : DISABLED_CLASS}`,\n      `m-lightbox__controlBar__back${backBtnEnabled ? DISABLED_CLASS : ''}`,\n    );\n\n    const nextBtnEnabled = this.currentIndex + 1 === this.images.length;\n    this.nextButton.firstElementChild.classList.replace(\n      `m-lightbox__controlBar__next${nextBtnEnabled ? '' : DISABLED_CLASS}`,\n      `m-lightbox__controlBar__next${nextBtnEnabled ? DISABLED_CLASS : ''}`,\n    );\n  };\n\n  /**\n   * Calculates the aspect ratio of the Lightbox with all elements (closeBar, image, caption, controlBar)\n   * and set the css properties based on this ratio. Therefore, height and width scaling of lightbox is possible.\n   */\n  private setLightboxSize() {\n    const image: HTMLElement = this.images[this.currentIndex].querySelector('.a-image__ratioWrapper');\n    const box: HTMLElement = this.container.querySelector('.a-box');\n    const closeBar: HTMLElement = this.container.querySelector('.m-lightbox__closeBar');\n    const controlBar: HTMLElement = this.container.querySelector('.m-lightbox__controlBar');\n    const figcaption: HTMLElement = this.container.querySelector('figcaption');\n\n    const imgHeight = image.clientHeight;\n\n    const width = image.clientWidth;\n    var height = imgHeight + closeBar.clientHeight;\n\n    if (this.needsControlBar()){\n      height = height + controlBar.clientHeight;\n    }\n\n    if (figcaption){\n      height = height + figcaption.clientHeight;\n    }\n\n    const ratio = (width as any as number) / (height as any as number);\n    const heightRatio = 100 / ratio;\n    const maxHeightRatio = 100 * ratio;\n\n    \n    if (box instanceof HTMLElement){\n      box.style.width =  `calc(100vw - ${BOX_MARGIN}px)`;\n      box.style.height =  `calc(${heightRatio}vw - ${BOX_MARGIN}px)`;\n      box.style.maxWidth =  `calc(${maxHeightRatio}vh - ${BOX_MARGIN}px)`;\n      box.style.maxHeight =  `calc(100vh - ${BOX_MARGIN}px)`;\n    }\n  }\n\n  private next = (): void => {\n    if (this.currentIndex + 1 !== this.images.length) {\n      this.showImageAndCaption(this.currentIndex, false);\n      this.currentIndex += 1;\n      this.showImageAndCaption(this.currentIndex, true);\n\n      this.counter.innerHTML = `${this.currentIndex + 1} of ${this.images.length}`;\n\n      this.showOrHideCollapseBtn();\n\n      this.setArrowState();\n    }\n  };\n\n  private back = (): void => {\n    if (this.currentIndex !== 0) {\n      this.showImageAndCaption(this.currentIndex, false);\n      this.currentIndex -= 1;\n      this.showImageAndCaption(this.currentIndex, true);\n\n      this.counter.innerHTML = `${this.currentIndex + 1} of ${this.images.length}`;\n\n      this.showOrHideCollapseBtn();\n\n      this.setArrowState();\n    }\n  };\n\n  /**\n   * shows this dialog\n   */\n  public show(): void {\n    this.box.show();\n\n    this.showOrHideCollapseBtn();\n\n    // remove control bar if not needed\n    const controlBar = this.container.querySelector('.m-lightbox__controlBar');\n    if (controlBar instanceof HTMLElement) {\n      if (this.needsControlBar()) {\n        controlBar.style.display = 'flex';\n      }\n      else {\n        controlBar.style.display = 'none'; \n        this.container.querySelectorAll('figcaption').forEach(caption => {\n          caption.style.bottom = '0';\n        });\n      }\n    }\n\n    if (!window.matchMedia(MEDIA_MAX_WIDTH_568PX).matches) {\n      this.setLightboxSize();\n    }\n\n    // on defined media queries in css file, the Lightbox resizing based on aspect ratio should not be applied\n    window.addEventListener('resize', () => {\n      if (window.matchMedia(MEDIA_MAX_WIDTH_568PX).matches) {\n        const box = this.container.querySelector('.a-box');\n        if (box instanceof HTMLElement){\n          box.style.removeProperty('width');\n          box.style.removeProperty('height');\n          box.style.removeProperty('max-width');\n          box.style.removeProperty('max-height');\n        }\n      } else {\n        this.setLightboxSize();\n      }\n    });\n  }\n\n  /**\n   * hides this dialog\n   */\n  public hide(): void {\n    this.box.hide();\n  }\n\n  /**\n   * Checks the sizes of the image caption and return true if the text needs to be expandable\n   */\n  private hasExpandableCaption(): boolean {\n    const imageCaption = this.images[this.currentIndex].querySelector(\n      'figcaption',\n    );\n\n    if(!imageCaption) {\n      return false;\n    }\n\n    const expandButton = this.container.querySelector(\n      '.m-lightbox__controlBar__collapseBtn__expand',\n    );\n\n    return (\n      imageCaption.clientHeight < imageCaption.scrollHeight ||\n      (expandButton instanceof HTMLElement)\n    );\n  }\n\n  /**\n   * Hides Collapse button if not needed and shows it if it is needed for current image index\n   */\n  private showOrHideCollapseBtn(): void {\n    const imageCaption = this.images[this.currentIndex].querySelector(\n      'figcaption',\n    );\n    const collapseButton = this.container.querySelector(\n      '[class*=\"m-lightbox__controlBar__collapseBtn__\"]',\n    );\n\n    if (collapseButton instanceof HTMLElement) {\n      if (\n        imageCaption &&\n        imageCaption.innerHTML.length > 0 &&\n        this.hasExpandableCaption()\n      ) {\n        collapseButton.style.display = 'block';\n      } else {\n        collapseButton.style.display = 'none';\n      }\n    }\n  }\n\n  /**\n   * checks if lightbox needs a controlbar with the current image number, collapse, next and back buttons.\n   */\n  private needsControlBar(): boolean {\n    const images = this.container.querySelectorAll('.a-image');\n    const imageCaptions = this.container.querySelectorAll('figcaption');\n\n    if (images.length > 1) {\n      return true;\n    }\n    if (!imageCaptions) {\n      return false;\n    }\n\n    \n    return this.hasExpandableCaption();\n  }\n\n}\n\nexport default Lightbox;\n","import BaseComponent from '../../baseComponent';\n\nenum State {\n  success = 'success',\n  error = 'error',\n  warning = 'warning',\n  neutral = 'neutral',\n}\n\nconst states = [State.success, State.error, State.warning, State.neutral];\n\n// from https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro\nconst createElementFromHTML = (htmlString: string): Node => {\n  const div = document.createElement('div');\n  div.innerHTML = htmlString.trim();\n\n  return div.firstChild;\n};\n\nconst createNotificationTemplate = (content: string, level: State): string => `\n    <div class=\"a-notification a-notification--text -${level || 'neutral'}\">\n        <div class=\"a-notification__content\">\n            ${content}\n        </div>\n    </div>\n`;\n\nclass FormField extends BaseComponent {\n  private notification: HTMLElement;\n\n  private field: HTMLElement;\n\n  private input: HTMLInputElement;\n\n  constructor(container: HTMLElement) {\n    super(container);\n\n    this.field = container.querySelector(\n      '.a-text-field, .a-text-area, .a-radio-button, .a-checkbox',\n    );\n\n    this.input = this.field.querySelector('input, textarea');\n  }\n\n  public setState(state: string, notification?: string): void {\n    if (!states.includes(state as State)) {\n      console.warn(`Unknown state ${state} for a FormField - ignoring.`);\n      return;\n    }\n    states.forEach(stateEntry => this.field.classList.remove(`-${stateEntry}`));\n    this.field.classList.add(`-${state}`);\n    if (notification && this.needsNotification()) {\n      this.setNotification(notification);\n    } else {\n      this.clearNotification();\n    }\n  }\n\n  private clearNotification(): void {\n    if (this.notification) {\n      this.notification.remove();\n    }\n  }\n\n  private needsNotification(): boolean {\n    return this.input.type !== 'checkbox';\n  }\n\n  private setNotification(content: string): void {\n    this.clearNotification();\n\n    this.notification = createElementFromHTML(\n      createNotificationTemplate(content, this.getState()),\n    ) as HTMLElement;\n\n    this.container.appendChild(this.notification);\n  }\n\n  private getState(): State {\n    const candidates = states.filter(state =>\n      this.field.classList.contains(`-${state}`),\n    );\n\n    if (candidates.length === 0) {\n      return State.neutral;\n    }\n    return candidates[0];\n  }\n}\n\nexport default FormField;\n","import BaseComponent from '../../baseComponent';\n\nconst SELECT = 'select';\nconst ARROW_UP_CLASS = `a-dropdown--clicked`;\n\nexport default class Dropdown extends BaseComponent {\n  protected static events = ['onClick'];\n\n  private readonly selectBox: HTMLElement;\n\n  constructor(container: HTMLElement) {\n    super(container);\n\n    /**\n     * Define DOM Elements and Variables\n     */\n    this.selectBox = container.querySelector(SELECT);\n\n    function removeUpArrow(): void {\n      document.removeEventListener('mouseup', removeUpArrow);\n      setTimeout(() => {\n        container.classList.remove(ARROW_UP_CLASS);\n      }, 1);\n    }\n\n    function toggleUpArrow(): void {\n      if (!container.classList.contains(ARROW_UP_CLASS)) {\n        container.classList.add(ARROW_UP_CLASS);\n        document.addEventListener('mouseup', removeUpArrow);\n      } else {\n        container.classList.remove(ARROW_UP_CLASS);\n      }\n    }\n\n    if (this.selectBox instanceof HTMLElement) {\n      // handles all mouse clickevent\n      this.selectBox.addEventListener('click', () => {\n        toggleUpArrow();\n      });\n\n      // handles all change event. The problem is when we open select and doesn't change the value, then of course the event is not triggered\n      this.selectBox.addEventListener('change', (e) => {\n        removeUpArrow();\n      });\n\n      // handles close the select action when user press Escape or Tab button\n      this.selectBox.addEventListener('keyup', event => {\n        if (event.code === 'Escape' || event.code === 'Tab') {\n          removeUpArrow();\n        }\n      });\n\n      // handles open/close the select action when user press Enter\n      this.selectBox.addEventListener('keypress', event => {\n        if (event.code === 'Enter') {\n          toggleUpArrow();\n        }\n      });\n    }\n  }\n}\n","/**\n * @name updateIndicatorState\n *\n * @param indicators                  List of all all indicator elements\n * @param activeIndex                 Current Index of Pagination\n * @description\n * Updates the indicators selected/unselected state after a change of pagination\n */\n\nconst CLASS_SELECTED = '-selected';\n\nconst updateIndicatorState = (\n  indicators: NodeListOf<HTMLElement>,\n  activeIndex: number,\n): void => {\n  indicators.forEach(indicator => {\n    const parsed = parseInt(indicator.getAttribute('data-index'), 0);\n\n    if (parsed === activeIndex) {\n      indicator.classList.add(CLASS_SELECTED);\n    } else if (indicator.classList.contains(CLASS_SELECTED)) {\n      indicator.classList.remove(CLASS_SELECTED);\n    }\n  });\n};\n\nexport default updateIndicatorState;\n","/**\n * @name createPaginationArray\n * @author Experience One AG\n *\n * @param activeIndex                 Current Index of Pagination\n * @param maxPages                    Maximium Amount of Pages to Show\n * @param visiblePagesAroundCurrent   How many Pages should surround the Current Page\n * @param minVisibleItems             Minimal Visible Pages and Truncation-Dots\n * @returns                           Array with Generated Pagination\n * @description\n * Generate Smart Truncated Pagination from a Range of Pages\n */\n\nconst createPaginationArray = (\n  activeIndex: number,\n  maxPages: number,\n  visiblePagesAroundCurrent = 1,\n  minVisibleItems = 7,\n): (number | string)[] => {\n  const range = [];\n\n  /**\n   * If Amount of Pages is <= minimal visible Pages, show all Items\n   */\n  if (maxPages <= minVisibleItems) {\n    return Array.from({ length: maxPages + 1 }, (_, i) => i).slice(1);\n  }\n\n  /**\n   * Fill Array with activeIndex and the Surrounding Pages\n   */\n  for (\n    let i = Math.max(2, activeIndex - visiblePagesAroundCurrent);\n    i <= Math.min(maxPages - 1, activeIndex + visiblePagesAroundCurrent);\n    i += 1\n  ) {\n    range.push(i);\n  }\n\n  /**\n   * Add Truncation-Dots to the Beginning of the Array if activeIndex is High Enough.\n   * We Use 3 as a Decider Because when the Value is < 3 we don't want to Show\n   * Truncation-Dots at the Array's Beginning.\n   *\n   * Example:\n   * activeIndex - visiblePagesAroundCurrent = 3;\n   * The Array at this point would be [2,3,4].\n   * If we would Add Truncation-Dots now, we would get ['...', 2, 3, 4] which is wrong,\n   * because it ends up with [1, '...', 2, 3, 4].\n   */\n  if (activeIndex - visiblePagesAroundCurrent > 3) {\n    range.unshift('...');\n  }\n\n  /**\n   * Add Truncation-Dots to the End of the Array if activeIndex is Low Enough.\n   */\n  if (activeIndex + visiblePagesAroundCurrent < maxPages - 2) {\n    range.push('...');\n  }\n\n  /**\n   * The pagination must always show N Items.\n   * N = minVisibleItems - (2 * visiblePagesAroundCurrent).\n   * If Length of Array is < N, fill up Array with Missing Pages.\n   */\n  if (range.length < minVisibleItems - 2 * visiblePagesAroundCurrent) {\n    if (activeIndex < minVisibleItems - 2 * visiblePagesAroundCurrent) {\n      /**\n       * If activeIndex is low enough, fill up the Array from 1 - N\n       * and add Truncation-Dots as well as maxPages-Value (aka Last Page).\n       * N = minVisibleItems - 2.\n       * - 2 Because of the 2 Items (Dots, maxPages) that will be Added After\n       * Filling the Array with Missing Pages.\n       */\n\n      range.length = 0;\n\n      for (let i = 1; i <= minVisibleItems - 2; i += 1) {\n        range.push(i);\n      }\n\n      range.push('...');\n      range.push(maxPages);\n\n      return range;\n    }\n\n    /**\n     * If activeIndex is _NOT_ low enough, fill up the Array from N - maxPages\n     * and add Truncation-Dots as well as the First Page.\n     */\n\n    range.length = 0;\n    range.push(1, '...');\n\n    const arrayBaseLength = range.length;\n\n    for (\n      let i = maxPages;\n      i > maxPages - (minVisibleItems - arrayBaseLength);\n      i -= 1\n    ) {\n      range.splice(arrayBaseLength, 0, i);\n    }\n\n    return range;\n  }\n\n  range.unshift(1);\n  range.push(maxPages);\n\n  return range;\n};\n\nexport default createPaginationArray;\n","import createPaginationArray from './createPaginationArray';\n\n/**\n * @name updatePagination\n *\n * @param activeIndex                 Current Index of Pagination\n * @param maxPages                    Maximium Amount of Pages to Show\n * @param indicators                  List of all all indicator elements\n * @description\n * Updates the numbers of the pagination when active index was changed.\n */\n\nconst updatePagination = (\n  activeIndex: number,\n  maxPages: number,\n  indicators: NodeListOf<HTMLElement>,\n): void => {\n  const paginationArray = createPaginationArray(activeIndex, maxPages);\n\n  paginationArray.forEach((page, index) => {\n    if (typeof page === 'number') {\n      indicators[index].querySelector('span').textContent = page.toString();\n      indicators[index].setAttribute('data-index', page.toString());\n    } else if (typeof page === 'string') {\n      indicators[index].querySelector('span').textContent = '...';\n      indicators[index].removeAttribute('data-index');\n    }\n  });\n};\n\nexport default updatePagination;\n","import BaseComponent from '../../baseComponent';\nimport updateIndicatorState from './functions/updateIndicatorState';\nimport updatePagination from './functions/updatePagination';\n\nconst CLASS_NUMBERED = `a-page-indicator--numbered`;\nconst SELECTOR_INDICATOR = '.a-page-indicator__indicator';\nconst SELECTOR_ARROW_LEFT = '.a-page-indicator__caret.-left';\nconst SELECTOR_ARROW_RIGHT = '.a-page-indicator__caret.-right';\nconst BOUNDARY_CLASS = '-end';\n\nexport default class PageIndicator extends BaseComponent {\n  protected static events = [\n    'clicked',\n    'nextClicked',\n    'prevClicked',\n    'indexChanged',\n    'maxLengthChanged',\n  ];\n\n  private indicators: NodeListOf<HTMLElement>;\n\n  private arrowLeft: HTMLElement;\n\n  private arrowRight: HTMLElement;\n\n  public isNumbered: boolean;\n\n  private activeIndex: number;\n\n  private maxLength: number;\n\n  constructor(container: HTMLElement) {\n    super(container);\n\n    /**\n     * Define DOM Elements and Variables\n     */\n    this.indicators = container.querySelectorAll(SELECTOR_INDICATOR);\n    this.arrowLeft = container.querySelector(SELECTOR_ARROW_LEFT);\n    this.arrowRight = container.querySelector(SELECTOR_ARROW_RIGHT);\n    this.isNumbered = container.classList.contains(CLASS_NUMBERED);\n\n    // update inner state to rendered props given on the DOM element\n    const startIndex =\n      parseInt(container.getAttribute('data-start-index'), 0) || 0;\n\n    const maxLength =\n      parseInt(container.getAttribute('data-max-length'), 0) ||\n      this.indicators.length;\n\n    this.setMaxLength(maxLength);\n    this.setActiveIndex(startIndex);\n\n    // register click events for next and prev if arrows are given\n    if (this.arrowLeft instanceof HTMLElement) {\n      this.arrowLeft.addEventListener('click', () => {\n        this.prev();\n        this.triggerEvent('prevClicked');\n      });\n    }\n\n    if (this.arrowRight instanceof HTMLElement) {\n      this.arrowRight.addEventListener('click', () => {\n        this.next();\n        this.triggerEvent('nextClicked');\n      });\n    }\n\n    if (this.indicators) {\n      [...this.indicators].forEach(indicator => {\n        indicator.addEventListener('click', () => {\n          const clickedIndex = parseInt(\n            indicator.getAttribute('data-index'),\n            0,\n          );\n\n          this.setActiveIndex(clickedIndex);\n          this.triggerEvent('clicked', clickedIndex);\n        });\n      });\n    }\n  }\n\n  public setActiveIndex(newIndex: number): number {\n    if (newIndex > 0 && newIndex <= this.maxLength) {\n      this.activeIndex = newIndex;\n\n      if (this.isNumbered) {\n        updatePagination(this.activeIndex, this.maxLength, this.indicators);\n        this.updateArrowStyle();\n      }\n\n      updateIndicatorState(this.indicators, this.activeIndex);\n\n      this.triggerEvent('indexChanged', newIndex);\n    }\n\n    /** @TODO don't be optimistic */\n    return this.activeIndex;\n  }\n\n  public setMaxLength(length: number): number {\n    this.maxLength = length;\n    this.triggerEvent('maxLengthChanged', this.maxLength);\n\n    return this.maxLength;\n  }\n\n  /**\n   * @name   prev\n   * @author Experience One AG\n   * @copyright Robert Bosch GmbH\n   *\n   * @param amount  Optional: Amount to Move. (Default: 1)\n   * @returns New Active Index\n   * @description\n   * Move Back the Active Index by N\n   */\n  public prev(amount = 1): number {\n    const newIndex = this.activeIndex - amount;\n\n    return this.setActiveIndex(newIndex);\n  }\n\n  /**\n   * @name   next\n   * @author Experience One AG\n   * @copyright Robert Bosch GmbH\n   *\n   * @param amount  Optional: Amount to Move. (Default: 1)\n   * @returns New Active Index\n   * @description\n   * Move Forth the Active Index by N\n   */\n  public next(amount = 1): number {\n    const newIndex = this.activeIndex + amount;\n\n    return this.setActiveIndex(newIndex);\n  }\n\n  /**\n   * @name    updateArrowStyle\n   * @author  Experience One AG\n   * @copyright Rober Bosch GmbH\n   *\n   * @description\n   * update the style of the arrows related to the active index\n   */\n  private updateArrowStyle(): void {\n    if (\n      this.activeIndex <= 1 &&\n      !this.arrowLeft.classList.contains(BOUNDARY_CLASS)\n    ) {\n      this.arrowLeft.classList.add(BOUNDARY_CLASS);\n      this.arrowRight.classList.remove(BOUNDARY_CLASS);\n    } else if (\n      this.activeIndex >= this.maxLength &&\n      !this.arrowRight.classList.contains(BOUNDARY_CLASS)\n    ) {\n      this.arrowRight.classList.add(BOUNDARY_CLASS);\n      this.arrowLeft.classList.remove(BOUNDARY_CLASS);\n    } else {\n      this.arrowLeft.classList.remove(BOUNDARY_CLASS);\n      this.arrowRight.classList.remove(BOUNDARY_CLASS);\n    }\n  }\n}\n","/**\n * This file contains all logic part of the components\n * The file will be used to load components logic\n * on static sites\n */\nimport TextField from './atoms/textField';\nimport TextArea from './atoms/textArea';\nimport Checkbox from './atoms/checkbox';\nimport Box from './atoms/box/index';\nimport Notification from './atoms/notification/index';\nimport ProgressIndicator from './atoms/progressIndicator/index';\nimport ValueModificator from './atoms/valueModificator';\nimport Slider from './atoms/slider/index';\n\nimport Dialog from './molecules/dialog/index';\nimport Popover from './molecules/popover';\nimport Lightbox from './molecules/lightbox/index';\n\nimport ElementWithComponent from './ElementWithComponent';\nimport WindowWithFrontendKit from './WindowWithFrontendKit';\nimport FormField from './molecules/formField';\nimport Dropdown from './atoms/dropdown';\nimport PageIndicator from './atoms/pageIndicator/index';\n\n/**\n * @WARNING\n * the order of these entries determines the loading order\n * of component behavior code.\n *\n * Keep this in mind when adding components here\n */\nconst components = [\n  {\n    Component: Checkbox,\n    selector: '.a-checkbox',\n  },\n  {\n    Component: Lightbox,\n    selector: '.m-lightbox',\n  },\n  {\n    Component: Dialog,\n    selector: '.m-dialog',\n  },\n  {\n    Component: Box,\n    // here, we only need functionality for modal boxes\n    selector: '.a-box--modal',\n  },\n  {\n    Component: Popover,\n    // here, we only need functionality for detached popovers\n    selector: '.m-popover:not(.-detached)',\n  },\n  {\n    Component: TextField,\n    selector: '.a-text-field',\n  },\n  {\n    Component: TextArea,\n    selector: '.a-text-area',\n  },\n  {\n    Component: Notification,\n    // here, we only need functionality for banner notifications\n    selector: '.a-notification--banner',\n  },\n  {\n    Component: ProgressIndicator,\n    selector: '.a-progress-indicator',\n  },\n  {\n    Component: FormField,\n    selector: '.m-form-field',\n  },\n  {\n    Component: Dropdown,\n    selector: '.a-dropdown',\n  },\n  {\n    Component: Slider,\n    selector: '.a-slider',\n  },\n  {\n    Component: PageIndicator,\n    selector: '.a-page-indicator',\n  },\n  {\n    Component: ValueModificator,\n    selector: '.a-value-modificator',\n  },\n];\n\n/**\n * a registry of components that should be published to the\n * global object\n *\n * add any components to be published here\n * @TODO should we just publish all of them somehow?\n */\nconst componentRegistry = {\n  Box,\n  Dialog,\n  Lightbox,\n  Notification,\n};\n\n/**\n * prohibit any changes after here to ensure API stability\n */\nObject.freeze(componentRegistry);\n\n/**\n * make the registry publically available\n * the guard is there to ensure that this only happens once,\n * because this code may run more than once in e.g. HMR environments\n */\nif (!((window as undefined) as WindowWithFrontendKit).boschFrontendKit) {\n  Object.defineProperty(window, 'boschFrontendKit', {\n    get: () => componentRegistry,\n  });\n}\n\ncomponents.forEach(component => {\n  [...document.querySelectorAll(component.selector)].forEach(element => {\n    if (!(element as ElementWithComponent).component) {\n      // eslint-disable-next-line no-new\n      new component.Component(element as ElementWithComponent);\n    }\n  });\n});\n\n// // dispatch an event when bootstrapping of frontend-kit is done\nconst event = new CustomEvent('bosch.frontend-kit-done');\ndocument.dispatchEvent(event);\n\nexport default components;\n"]}